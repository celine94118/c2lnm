// lib/content-generator.ts
// Fonctions pour la g√©n√©ration de contenu automatis√©e.

interface ContentGenerationOptions {
  topic: string
  type: "article" | "social_post" | "email_sequence" | "product_description"
  length?: "short" | "medium" | "long"
  keywords?: string[]
}

export async function generateContent(options: ContentGenerationOptions): Promise<string> {
  // Simule une g√©n√©ration de contenu bas√©e sur les options
  console.log(`Generating ${options.type} about "${options.topic}"...`)

  let content = ""
  switch (options.type) {
    case "article":
      content = `Titre: ${options.topic} - Le Guide Complet\n\nIntroduction: D√©couvrez comment ma√Ætriser ${options.topic} avec ce guide d√©taill√©. ${options.keywords ? `Mots-cl√©s: ${options.keywords.join(", ")}.` : ""}\n\nContenu: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`
      break
    case "social_post":
      content = `üöÄ Nouveau post sur ${options.topic} ! Apprenez les secrets pour ${options.topic}. #${options.topic.replace(/\s/g, "")} #BusinessAutomatis√©`
      break
    case "email_sequence":
      content = `S√©quence Email pour ${options.topic}:\n\nEmail 1: Bienvenue et Introduction √† ${options.topic}\nEmail 2: Les 3 Secrets de ${options.topic}\nEmail 3: Offre Sp√©ciale sur notre produit ${options.topic}`
      break
    case "product_description":
      content = `D√©couvrez notre nouveau produit : "${options.topic}". Ce guide/outil r√©volutionnaire vous aidera √† ${options.topic} et √† atteindre vos objectifs. Achetez maintenant !`
      break
    default:
      content = `Contenu g√©n√©r√© pour ${options.topic}.`
  }

  if (options.length === "short") {
    content = content.substring(0, 100) + "..."
  } else if (options.length === "medium") {
    content = content.substring(0, 300) + "..."
  }

  await new Promise((resolve) => setTimeout(resolve, 1500)) // Simule un d√©lai de g√©n√©ration
  console.log("Content generated successfully!")
  return content
}
